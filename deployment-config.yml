apiVersion: v1
kind: DeploymentConfig
metadata:
  labels:
    app: mariadb
  name: mariadb
spec:
  replicas: 1
  selector:
    app: mariadb
    deploymentconfig: mariadb
  strategy:
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Rolling
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: mariadb
        deploymentconfig: mariadb
    spec:
      containers:
      - name: mariadb
        env:
          - name: MYSQL_USER
            valueFrom:
              secretKeyRef:
                key: database-user
                name: mysql
          - name: MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-password
                name: mysql
          - name: MYSQL_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-root-password
                name: mysql
          - name: MYSQL_DATABASE
            valueFrom:
              secretKeyRef:
                key: database-name
                name: mysql
        image: docker-registry.default.svc:5000/openshift/my-mariadb
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 3306
          timeoutSeconds: 1
        ports:
          - containerPort: 3306
            protocol: TCP
        readinessProbe:
          exec:
            command:
              - /bin/sh
              - '-i'
              - '-c'
              - >-
                MYSQL_PWD="$MYSQL_PASSWORD" mysql -h 127.0.0.1 -u $MYSQL_USER
                -D $MYSQL_DATABASE -e 'SELECT 1'
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            memory: 512Mi
        securityContext:
          capabilities: {}
          privileged: false
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
          - mountPath: /var/lib/mysql/data
            name: mysql-data
      - name: logging-sidecar
        image: docker-registry.default.svc:5000/openshift/logging-sidecar
        args:
          - /bin/bash
          - -c
          - /usr/local/bin/sidecar-logging.sh
        env:
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            valueFrom:
              configMapKeyRef:
                name: logging-sidecar
                key: container_name
          - name: GREP_PATTERN
            valueFrom:
              configMapKeyRef:
                name: logging-sidecar
                key: grep_pattern
          - name: SLEEP_TIME
            valueFrom:
              configMapKeyRef:
                name: logging-sidecar
                key: sleep_time
          - name: LOG_SERVER_URI
            valueFrom:
              configMapKeyRef:
                name: logging-sidecar
                key: log_server_uri
          - name: FEED_NAME_HEADER
            valueFrom:
              configMapKeyRef:
                name: logging-sidecar
                key: feed_name_header
          - name: SYSTEM_NAME_HEADER
            valueFrom:
              configMapKeyRef:
                name: logging-sidecar
                key: system_name_header
          - name: ENV_NAME_HEADER
            valueFrom:
              configMapKeyRef:
                name: logging-sidecar
                key: env_name_header
          - name: DEDUPE
            valueFrom:
              configMapKeyRef:
                name: logging-sidecar
                key: dedupe
          - name: GRACEFUL_EXIT_TIME
            valueFrom:
              configMapKeyRef:
                name: logging-sidecar
                key: graceful_exit_time
          - name: STARTUP_TIME
            valueFrom:
              configMapKeyRef:
                name: logging-sidecar
                key: startup_time
          - name: DEBUG
            value: "false"
        resources: {}
        terminationMessagePath: /dev/termination-log
      volumes:
        - emptyDir: {}
          name: mysql-data
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      securityContext: {}
      terminationGracePeriodSeconds: 30
status: {}
